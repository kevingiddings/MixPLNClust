% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MIXPLNClust_test.R
\name{MixPLNClust_R}
\alias{MixPLNClust_R}
\title{Clustering method for discrete count data with missing entries.}
\usage{
MixPLNClust_R(
  count_matrix,
  G,
  group_labels = NULL,
  parameter_space = NULL,
  gr_method = "CSS",
  max_iter = 1000,
  step_size = 5e-04,
  calc_norm_factors = FALSE,
  custom_lib_mat = NULL,
  init = "kmmeans"
)
}
\arguments{
\item{count_matrix}{A matrix of count data, potentially with missing values. Missing values should be denoted with NA values. Rows will be clustered. Rows with no observed values will be discarded.}

\item{G}{Positive integer specifying the number of clusters to test.}

\item{group_labels}{Optional. A vector of integers identifying the true cluster each row belongs to.}

\item{parameter_space}{Optional. Matrix of underlying parameter space that data was generated from.}

\item{gr_method}{Deprecated. Previously used to determine method of gradient descent. Defaults to using constant step size (CSS).}

\item{max_iter}{Positive double. Max number of iterations to test. Default maximum for iterations is \eqn{1000}.}

\item{step_size}{Positive double. Step size for gradient descent method. Default step size is \eqn{0.0005}}

\item{calc_norm_factors}{Boolean. Should the data be scaled to account for different sampling depths?}

\item{custom_lib_mat}{Optional. Numerical vector of length d. Used in place of calc_norm_factors if user wants to specify a predefined scaling vector.}

\item{init}{Method for cluster initialization. Default is "kmmeans" to use \eqn{k}-missing-means. Other option is "rand", which randomly assigns all rows to 1 of the \eqn{G} groups with equal probability. Useful to prevent potential computational issues with large number of clusters.}
}
\value{
A list containing:
\itemize{
\item Y - Count matrix supplied to MixPLNClust.
\item pi_g - Vector of percent of observations in each cluster.
\item mu - list of estimated means for each cluster.
\item sigma - list of estimated covariance matrices for each cluster.
\item z - Matrix of percent chance for each observation to be in the respective cluster.
\item ARI - Adjusted Rand index of estimated clustering against true cluster assignment, if true cluster assignment is provided.
\item loglik - Vector log likelihoods for each iteration.
\item BIC - Bayesian inference criterion for the final iteration.
\item kmeans - initial estimated clustering assignment according to \code{\link[kmmeans:kmmeans]{k missing means}}.
\item true - true cluster assignment (if supplied),
\item time - time taken information
\item exit_code - stopping reason (max iterations reached, log likelihood convergence, etc.)
}
}
\description{
This function takes in a matrix of partially observed count data, as well as a number of clusters \eqn{G}, and attempts to cluster
the observed data into \eqn{G} clusters according to a mixture of multivariate Poisson log-normal distributions.
WARNING: This function performs all calculations in R, which is much slower than the version written with Rcpp (\code{\link[MixPLNClust:MixPLNClust]{MixPLNClust}}).
}
\examples{
#load in example data set
data(MixPLN_data)

clusters_to_test <- c(1,2,3)
PLNClust_results <- list()

#cluster with default settings
for(cluster in clusters_to_test){
   PLNClust_results[[cluster]] <- MixPLNClust_R(MixPLN_data$Counts,cluster)
}
mclust::map(PLNClust_results[[2]]$z)
}
